on:
  release:
    types: [created]
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: |
          echo "hello"
          echo "${{ github.event.payload.release }}"
      - name: Generate release notes
        uses: actions/github-script@v7
        with:
          script: |
            const releaseId = context.payload.release.id
            const release = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId
            })
            core.summary.addRaw(JSON.stringify(release)).write()
            const summaryUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.GITHUB_RUN_ID}`;

            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              body: release.data.body + "\n" + `[actions](${summaryUrl})`
            })
    #       if (previousTag) {
    #         releaseNotesParams.previous_tag_name = previousTag;
    #       }

    #       const releaseNotes = await github.rest.repos.generateReleaseNotes(releaseNotesParams);
    #       console.log(releaseNotes);

    #       await github.rest.repos.createRelease({
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         tag_name: releaseTag,
    #         name: releaseTag,
    #         body: releaseNotes.data.body,
    #       });